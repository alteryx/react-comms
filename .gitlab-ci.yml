image: node:lts

stages:
  - test-coverage
  - build
  - build-docs
  - pages
  - publish
  - sonarscan

cache:
  paths:
    - node_modules/

test-sdk:
  stage: test-coverage
  tags:
    - linux-docker
  script:
    - npm i && npm run test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    when: always
    expire_in: 1h
    paths:
      - coverage/

build-ui-sdk:
  stage: build
  tags:
    - linux-docker
  script:
    - npm i
    - npm run build:es2015 && npm run build:es2015modules
  artifacts:
    when: always
    expire_in: 1h
    paths:
      - build/

sonarqube-check:
  stage: sonarscan
  tags:
      - linux-docker
  dependencies:
    - test-sdk
    - build-ui-sdk
  image:
      name: sonarsource/sonar-scanner-cli:latest
  variables:
      # sonarqube requires full clone for commit history-enriched analysis reporting
      GIT_DEPTH: 0
      SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
  script:
      - sonar-scanner -X -Dproject.settings=sonar-project.properties -Dsonar.qualitygate.wait=true
  allow_failure: true
  rules:
      - if: "$CI_PIPELINE_SOURCE == 'push'"  
      - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"  
      - if: '$CI_COMMIT_REF_NAME  == "master" '  
      - if: '$CI_COMMIT_REF_NAME  =~ /^release/'

build-docs-feature:
  stage: build-docs
  tags:
    - linux-docker
  script:
    - npm i
    - npm run docs:build
  only:
    changes:
      - .gitlab-ci.yml
      - src/**
  artifacts:
    paths:
      - styleguide
    expire_in: 1d

publish-sdk:
  stage: publish
  tags:
    - linux-docker
  script:
    - git checkout $CI_COMMIT_REF_NAME
    - git config --global user.email $REMOTE_PUSH_EMAIL
    - git config --global user.name $REMOTE_PUSH_USER
    - REPO_URL=`echo $CI_REPOSITORY_URL | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"`
    - git remote set-url origin https://gitlab-ci-token:$REMOTE_PUSH_USER_TOKEN@$REPO_URL
    - npm version patch
    - git add .
    - git commit -m "Bumping version for master build"
    - git pull origin master && git push && git push --tags
    - echo _auth = $ARTIFACTORY_AUTH>>.npmrc
    - echo email = $ARTIFACTORY_EMAIL>>.npmrc
    - echo always-auth = true>>.npmrc
    - npm run build:publish --tag Alpha
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[No Publish\]/i
  only:
    changes:
      - .gitlab-ci.yml
      - src/**
  only:
    - master
      
pages:
  stage: pages
  tags:
    - linux-docker
  dependencies:
    - test-sdk
    - build-docs-feature
  script:
    - mv styleguide public
    - cp public/index.html public/404.html
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master



