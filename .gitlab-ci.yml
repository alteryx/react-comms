image: node:lts

stages:
  - test-coverage
  - build
  - sonarscan
  - build-docs
  - publish
  - pages

cache:
  paths:
    - packages/components/node_modules/
    - packages/docs/node_modules/

test-sdk:
  stage: test-coverage
  tags:
    - linux-docker
  script:
    - cd packages/components
    - npm i && npm run test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    when: always
    expire_in: 1h
    paths:
      - packages/components/coverage/

build-ui-sdk:
  needs: [test-sdk]
  stage: build
  tags:
    - linux-docker
  script:
    - cd packages/components
    - npm i
    - npm run build:publish
    - echo registry = $ARTIFACTORY_PATH>>.npmrc
    - echo _auth = $ARTIFACTORY_AUTH>>.npmrc
    - echo email = $ARTIFACTORY_EMAIL>>.npmrc
    - echo always-auth = true>>.npmrc
    - npm version 0.0.$CI_PIPELINE_ID-$CI_COMMIT_REF_SLUG --no-git-tag-version
    - npm publish build --tag $CI_COMMIT_REF_SLUG
  artifacts:
    when: always
    expire_in: 1h
    paths:
      - packages/components/build/

sonarqube-check:
  stage: sonarscan
  tags:
      - linux-docker
  dependencies:
    - test-sdk
    - build-ui-sdk
  image:
      name: sonarsource/sonar-scanner-cli:latest
  variables:
      # sonarqube requires full clone for commit history-enriched analysis reporting
      GIT_DEPTH: 0
      SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
  script:
      - sonar-scanner -X -Dproject.settings=sonar-project.properties -Dsonar.qualitygate.wait=true
  allow_failure: true
  rules:
      - if: "$CI_PIPELINE_SOURCE == 'push'"  
      - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"  
      - if: '$CI_COMMIT_REF_NAME  == "master" '  
      - if: '$CI_COMMIT_REF_NAME  =~ /^release/'

build-docs-feature:
  needs: [test-sdk]
  stage: build-docs
  tags:
    - linux-docker
  script:
    - cd packages/docs
    - npm i
    - npm run docs:build
  artifacts:
    paths:
      - packages/docs/styleguide
    expire_in: 1d

publish_demo:
  stage: publish
  tags:
    - linux-docker
  before_script: # this is from https://docs.gitlab.com/ee/ci/ssh_keys/
    - ls /etc/*release
    - "which sshpass || ( apt-get update -y && apt-get install sshpass -y )"
  script:
    - sshpass -p "$DEMO_HOST_PASS" scp -o StrictHostKeyChecking=no -r packages/docs/styleguide $DEMO_HOST_USER@10.10.8.152:/home/$DEMO_HOST_USER/demo/public/sdk-$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  only:
    changes:
      - .gitlab-ci.yml
      - src/packages/docs/**
      - src/packages/components/**

publish-sdk:
  stage: publish
  tags:
    - linux-docker
  script:
    - cd packages/components
    - git checkout $CI_COMMIT_REF_NAME
    - git config --global user.email $REMOTE_PUSH_EMAIL
    - git config --global user.name $REMOTE_PUSH_USER
    - REPO_URL=`echo $CI_REPOSITORY_URL | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"`
    - git remote set-url origin https://gitlab-ci-token:$REMOTE_PUSH_USER_TOKEN@$REPO_URL
    - npm version patch --no-git-tag-version
    - git add . 
    - git commit -m "Bumping version for master build [ci skip]"
    - git pull origin master && git push && git push --tags
    - echo _auth = $ARTIFACTORY_AUTH>>.npmrc
    - echo email = $ARTIFACTORY_EMAIL>>.npmrc
    - echo always-auth = true>>.npmrc
    - npm run build:publish && npm publish build --tag beta
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[No Publish\]/i
  only:
    changes:
      - .gitlab-ci.yml
      - src/packages/components/**
  only:
    - master
      
pages:
  stage: pages 
  tags:
    - linux-docker
  needs:
    - test-sdk
    - build-docs-feature
  script:
    - mv packages/docs/styleguide public
    - cp public/index.html public/404.html
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master



